<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/browse.css') }}">
    <title>Browse</title>
    {% include 'shared/navBar.jinja' %}
    
    <style>
        body{
            overflow-x: hidden; /* Prevent horizontal scroll */
        }

        .badge{
            z-index: 999;
        }

        .item-card {
            background: white;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            transition: all 0.4s ease;
            margin-bottom: 2rem;
            
            border: 3px solid transparent;
            text-align: center;

        }
        
        .logo-showcase {
        position: absolute;
        bottom: 0; 
        left: 0;
        width: 100%;
        overflow: hidden;
        padding: 0.5rem 0;
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(6px);
        }

        .logos-wrapper {
        display: flex;
        gap: 2rem;
        animation: scrollLogos 15s linear infinite;
        width: max-content;      /* only take up whatâ€™s needed */
        will-change: transform;  /* performance hint */
        }

        .logo-item img {
        max-height: 50px;
        object-fit: contain;
        transition: transform 0.3s;
        }

        .logo-item img:hover {
        transform: scale(1.1);
        }

        /* Smooth infinite scroll */
        @keyframes scrollLogos {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-50%);
        }
        }
        .compare-popup {
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9999;
            display: none; /* hidden by default */
            padding: 10px 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .compare-popup {
            opacity: 0;
            top: 0;
        }
        .compare-popup.show {
            opacity: 1;
            top: 20px;
        }

    </style>

</head>
<body>
    <div>
        <div class="hero-section text-center mb-4 position-relative">
            <div class="container mt-4">
                <button id="compareButton" class="btn btn-primary " style="display:none;" >Compare Selected Items</button>
            </div>
            <h1>Browse Our Collection</h1>
            <p class="lead">Discover a wide range of products from top brands.</p>
            <!-- Logo Showcase floating bar -->
            <div class="logo-showcase">
                <div class="logos-wrapper">
                {% for i in range(5) %}
                    {% for brand in brands %}
                        <a href="#" class="logo-item">
                            <img src="{{ brand.img }}" alt="{{ brand.name }}">
                        </a>
                    {% endfor %}
                {% endfor %}
                </div>
            </div>
        </div>
        <form action="{{ url_for('browse') }}" method="GET" class="d-flex justify-content-between align-items-center px-3" style="width: 60%; max-width: 1200px;">
    
            <!-- Search Bar -->
            <div class="input-group" style="max-width: 400px;">
                <input type="text" id="searchBar" class="form-control search-input" 
                    placeholder="Search for items..." 
                    name="search" 
                    value="{{ request.args.get('search', '') }}">
                <button class="btn btn-primary search-button" id="searchButton">Search</button>
            </div>

            <!-- Sort Dropdown -->
            <div class="ms-2">
                <select class="form-select" id="sortBy" name="sortBy" style="width: 200px;" onchange="this.form.submit()">
                    <option value="" disabled {% if not request.args.get('sortBy') %}selected{% endif %}>Sort By</option>
                    <option value="price_asc" {% if request.args.get('sortBy') == 'price_asc' %}selected{% endif %}>Price: Low to High</option>
                    <option value="price_desc" {% if request.args.get('sortBy') == 'price_desc' %}selected{% endif %}>Price: High to Low</option>
                    <option value="title_asc" {% if request.args.get('sortBy') == 'title_asc' %}selected{% endif %}>Name: A to Z</option>
                    <option value="title_desc" {% if request.args.get('sortBy') == 'title_desc' %}selected{% endif %}>Name: Z to A</option>
                    <option value="type_asc" {% if request.args.get('sortBy') == 'type_asc' %}selected{% endif %}>Type: A to Z</option>
                    <option value="type_desc" {% if request.args.get('sortBy') == 'type_desc' %}selected{% endif %}>Type: Z to A</option>
                </select>
            </div>

            <!-- Brand Filter -->
            <div class="ms-2">
                <select class="form-select" id="brandFilter" name="brandFilter" style="width: 200px;" onchange="this.form.submit()">
                    <option value="" {% if not request.args.get('brandFilter') %}selected{% endif %}>All Brands</option>
                    {% for brand in brands %}
                        <option value="{{ brand.id }}" 
                            {% if request.args.get('brandFilter') == brand.id|string %}selected{% endif %}>
                            {{ brand.name }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        </form>

        <div id="recentlyViewed" class="recently-viewed-container">
            <a class="m-3 text-muted fw-bold" role="button" data-bs-toggle="collapse" href="#recentlyViewedCollapse" 
            aria-expanded="false" aria-controls="recentlyViewedCollapse">
            Recently Viewed <span class="text" id="collapseArrow">&#11207;</span>
            </a>
            <div class="collapse m-4" id="recentlyViewedCollapse">
                <div class="recent-items d-flex gap-2" id="recent-items-container"></div>
            </div>
        </div>

        <hr>
        <div class="item-grid row g-3 ms-2 pt-3 me-2" id="itemGrid">
            {% for item in items %}
                <div class="col-md-4">
                    <div class="item-card p-1">
                        <div class="justify-content-start form-check text-start ms-2">
                            <input type="checkbox" id="compare" class="form-check-input compare-checkbox" data-id="{{ item.id }}">
                            <label for="compare" class="form-check-label">Compare</label>
                        </div>
                        <div class="image-wrapper position-relative">
                            <a class="badge position-absolute top-0 start-0 m-2" href="{{ item.brand_link }}" target="_blank" title="Go to {{ item.brand_name }} website">
                                <img src="{{ item.brand_logo }}" alt="{{ item.brand_logo }}" style="height: 30px; width: auto;">
                            </a>
                            <img src="{{ item.img }}" alt="{{ item.title }}" class="img-fluid mb-3" loading="lazy"
                                style="border-radius: 15px; max-height: 200px; object-fit: cover; width: 100%;">
                        </div>
                        <h5 class="item-title mt-2 text-truncate">{{ item.title }}</h5>
                        <p class="item-type">{{ item.type }}</p>
                        <p class="fw-bold">${{ "%.2f"|format(item.price) }}</p>
                        <a href="{{ item.link }}" target="_blank" class="btn btn-primary">View Details</a>
                        <a href="#" class="btn btn-secondary btn-add" data-id="{{ item.id }}"
                            data-title="{{ item.title }}"
                            data-img="{{ item.img }}"
                            data-price="{{ item.price }}"
                            data-link="{{ item.link }}"><i class="fa-solid fa-cart-shopping"></i>
                             Add to Cart
                        </a>
                    </div>
                </div>
            {% endfor %}
        </div>
        
        {% if items | length == 0 %}
            <p class="text-center">No items found.</p>
        {% else %}
            <div class="d-flex justify-content-center mt-2 mb-4" id="paginationControls"></div>
        {% endif %}
    </div>
</body>
<script>
    function searchItems(){
        let input = document.getElementById("searchBar").value
        input=input.toLowerCase();
        let x = document.getElementsByClassName('item-card');

        for (i = 0; i < x.length; i++) { 
            if (!x[i].innerHTML.toLowerCase().includes(input)) {
                x[i].parentElement.style.display="none";
            }
            else {
                x[i].parentElement.style.display="";
            }
        }
    }

    function paginateItems(itemsPerPage) {
        const items = document.querySelectorAll('.item-card');
        const totalPages = Math.ceil(items.length / itemsPerPage);
        let currentPage = 1;

        const showPage = page => {
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            items.forEach((item, i) => item.parentElement.style.display = (i >= start && i < end) ? '' : 'none');
        };

        const createControls = () => {
            const container = document.getElementById('paginationControls');
            container.innerHTML = '';

            const btn = (text, page) => {
                const b = document.createElement('button');
                b.textContent = text;
                b.className = 'btn btn-outline-primary mx-1';
                if (page === currentPage) b.classList.add('active');
                b.disabled = page < 1 || page > totalPages;
                b.addEventListener('click', () => {
                    currentPage = page;
                    showPage(currentPage);
                    createControls();
                });
                container.appendChild(b);
            };

            btn('Prev', currentPage - 1);

            let start = Math.max(1, currentPage - 1);
            let end = Math.min(totalPages, start + 2);
            if (end - start < 2) start = Math.max(1, end - 2);

            for (let i = start; i <= end; i++) btn(i, i);

            btn('Next', currentPage + 1);
        };

        showPage(currentPage);
        createControls();
    }
    document.addEventListener('DOMContentLoaded', () => paginateItems(15));

    document.querySelectorAll(".btn-add").forEach(btn => {
        btn.addEventListener("click", async (event) => {
            event.preventDefault();
            const productId = btn.dataset.id;
            btn.disabled = true;
            try {
                const res = await fetch("/cart/add", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ product_id: productId, qty: 1 })
                });
                const data = await res.json();
                if (data.ok){
                    btn.textContent = "Added âœ“";
                } else {
                alert(data.error || "Failed to add");
                btn.disabled = false;
                }
            } catch (e) {
                alert("Network error");
                btn.disabled = false;
            }

        });
    });
    const compareButton = document.getElementById('compareButton');
    const selected = [];

    document.querySelectorAll('.compare-checkbox').forEach(cb => {
        cb.addEventListener('change', e => {
            const id = e.target.dataset.id;
            if (e.target.checked) {
                selected.push(id);
            } else {
                const index = selected.indexOf(id);
                if (index > -1) selected.splice(index, 1);
            }

            // Show popup button if 2+ items selected, hide otherwise
            if (selected.length >= 2) {
                compareButton.style.display = 'inline-block';
            } else {
                compareButton.style.display = 'none';
            }
        });
    });
    
    // Track recently viewed products in sessionStorage
    function trackRecentlyViewed(productId, productData) {
        let viewed = JSON.parse(sessionStorage.getItem('recentlyViewed')) || [];

        // Remove if already exists
        viewed = viewed.filter(p => p.id !== productId);

        // Add to front
        viewed.unshift(productData);

        // Keep only the latest 5 items
        if (viewed.length > 5) viewed = viewed.slice(0, 5);

        sessionStorage.setItem('recentlyViewed', JSON.stringify(viewed));
    }

    const collapseElement = document.getElementById('recentlyViewedCollapse');
    const arrow = document.getElementById('collapseArrow');

    collapseElement.addEventListener('show.bs.collapse', () => {
        arrow.innerHTML = `\&#11206`;  // arrow points down when expanded
    });

    collapseElement.addEventListener('hide.bs.collapse', () => {
        arrow.innerHTML = `\&#11207`;  // arrow points left when collapsed
    });


    // Display Recently Viewed products
    function showRecentlyViewed() {
        const container = document.getElementById('recent-items-container');
        
        if (!container) return;

        container.innerHTML = '';
        const viewed = JSON.parse(sessionStorage.getItem('recentlyViewed')) || [];

        viewed.forEach(p => {
            const item = document.createElement('div');
            item.className = 'item-card p-1';
            item.style.width = '225px';
            item.innerHTML = `
                <div class="item-card p-1" style="font-size:0.85rem;">
                    <div class="image-wrapper position-relative">
                        <img src="${p.img}" alt="${p.title}" class="img-fluid mb-2" 
                            style="border-radius: 10px; max-height: 120px; object-fit: cover; width: 100%;">
                    </div>
                    <h6 class="item-title text-truncate">${p.title}</h6>
                    <p class="fw-bold mb-1">$${parseFloat(p.price).toFixed(2)}</p>
                    <a href="${p.link}" target="_blank" class="btn btn-sm btn-primary w-100 mb-1">View</a>
                    <a href="#" class="btn btn-sm btn-secondary w-100 btn-add"
                        data-id="${p.id}" 
                        data-title="${p.title}" 
                        data-img="${p.img}" 
                        data-price="${p.price}" 
                        data-link="${p.link}">
                        <i class="fa-solid fa-cart-shopping"></i> Add
                    </a>
                </div>
            `;
            container.appendChild(item);
        });
    }


    // Attach click listeners to Add to Cart buttons
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.btn-add').forEach(button => {
            button.addEventListener('click', e => {
                // Optional: prevent link navigation if needed
                e.preventDefault();

                const productData = {
                    id: button.dataset.id,
                    title: button.dataset.title,
                    img: button.dataset.img,
                    price: button.dataset.price,
                    link: button.dataset.link
                };

                trackRecentlyViewed(productData.id, productData);
                showRecentlyViewed();

            });
        });

        // Initialize Recently Viewed section on page load
        showRecentlyViewed();
    });
</script>
</html>