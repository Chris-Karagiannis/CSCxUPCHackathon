<!DOCTYPE html>
<html lang="en-US">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <title>Build Your Outfit</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/build_your_outfit.css') }}">
</head>
<body>
  <div class="container-fluid py-4">
    <div class="row g-3">
      <!-- LEFT: product rail -->
      <div class="col-12 col-lg-4">
        <input id="search" class="form-control mb-3" placeholder="Search items..." />
        <div id="catalog" class="d-grid gap-3"></div>
      </div>

      <!-- RIGHT: stage -->
      <div class="col-12 col-lg-8">
        <div id="stage" class="position-relative rounded-3 p-4"
             style="height:560px;background:linear-gradient(#faf7ef,#fff)">
          <!-- unique slot keys -->
          <div class="slot" data-slot="top"    style="left:15%;top:10%;width:30%"></div>
          <div class="slot" data-slot="bottom" style="left:15%;top:48%;width:30%"></div>
          <div class="slot" data-slot="shoes"  style="left:55%;top:70%;width:25%"></div>
        </div>
        <div class="mt-3 d-flex gap-2">
          <button class="btn btn-warning" id="saveMockup">Save</button>
          <button class="btn btn-outline-secondary" id="addAllFromMockup">Add all to cart</button>
        </div>
      </div>
    </div>
  </div>

  <script>
  const catalog = document.getElementById("catalog");
  const stageSlots = [...document.querySelectorAll('#stage .slot')];

  // Safer: encode product JSON for attribute
  function encodeProduct(p){ return encodeURIComponent(JSON.stringify(p)); }
  function decodeProduct(s){ return JSON.parse(decodeURIComponent(s)); }

  function productCard(p){
    return `
      <div class="card draggable-card" draggable="true"
           data-product='${encodeProduct(p)}'>
        <img src="${p.img}" class="card-img-top" alt="${p.title}">
        <div class="card-body py-2">
          <div class="d-flex justify-content-between">
            <small>${p.brand ?? ""}</small>
            <small class="fw-semibold">$${Number(p.price).toFixed(2)}</small>
          </div>
          <div class="small text-truncate" title="${p.title}">${p.title}</div>
        </div>
      </div>
    `;
  }

  // Drag start from catalog
  catalog.addEventListener('dragstart', e => {
    const card = e.target.closest('.draggable-card');
    if (!card) return;
    e.dataTransfer.setData('application/json', card.dataset.product);
  });

  // Accept drop on slots
  stageSlots.forEach(slot => {
    slot.addEventListener('dragover', e => { e.preventDefault(); slot.classList.add("highlight"); });
    slot.addEventListener('dragleave', () => slot.classList.remove("highlight"));
    slot.addEventListener('drop', e => {
      e.preventDefault();
      slot.classList.remove("highlight");
      const p = decodeProduct(e.dataTransfer.getData('application/json'));
      slot.innerHTML = ` <div class="position-relative">
                            <img src="${p.img}" class="w-100 rounded-3"
                             style="border-radius: 15px; max-height: 200px; object-fit: cover; width: 100%;">
                            <button type="button" class="btn-close position-absolute top-0 end-0 m-1 remove-btn"></button>
                          </div>`
      slot.classList.add('filled');
      slot.dataset.productId = p.id;
    });
  });

  document.getElementById("stage").addEventListener("click", e => {
    if (e.target.classList.contains("remove-btn")) {
      const slot = e.target.closest(".slot");
      slot.innerHTML = "";
      slot.classList.remove("filled");
      delete slot.dataset.productId;
    }
  });

  // Add-all from mockup
  document.getElementById('addAllFromMockup').onclick = async () => {
    const ids = stageSlots.map(s => s.dataset.productId).filter(Boolean);
    for (const id of ids){
      await fetch("/cart/add", {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({ product_id: Number(id), qty: 1 })
      });
    }
    alert("Added all from mockup!");
  };

  // Save mockup
  document.getElementById('saveMockup').onclick = async () => {
    const payload = {
      title: "My Outfit",
      template: "outfit",
      slots: stageSlots.map(s => ({ slot: s.dataset.slot, product_id: s.dataset.productId || null }))
    };

    const res = await fetch("/mockups/save", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });
    const data = await res.json();
    if (data.ok) window.location.href = data.url;
  };

  // Load catalog (choose ONE of the two shapes below)
  (async () => {
    const res = await fetch("/api/products?limit=20");
    const { items } = await res.json();
    catalog.innerHTML = items.map(productCard).join("");
  })();
  </script>
</body>
</html>
